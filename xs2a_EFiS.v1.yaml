openapi: 3.0.0
info:
  title: XS2A API  – EFiS AG
  version: '1.0'
  description: '# Berlin Group NextGenPSD2– Version 1.3.4'
  contact:
    name: EFiS AG
    url: 'http://efis.de'
    email: rene.lahaye@paymentgroup.de
  termsOfService: 'http://www.efis.de/impressum/'
  license:
    name: EFiS
    url: 'http://efis.de'
 # x-logo:
  #  url: 'http://efis.de/wp-content/uploads/2018/08/efis_logo_rgb_115_70.jpg'
   # backgroundColor: f9faf9
   # altText: EFiS AG logo
servers:
  - url: 'https://api-sandbox.efis.de/v1'
paths:
  /payments/sepa-credit-transfers:
    post:
      summary: 5.3.1 Payment Initiation with JSON encoding of the Payment Instruction
      operationId: post-payments-sepa-credit-transfers
      tags:
        - Payment Initiation Requests
        - PIS
        - Payments
      responses:
        '200':
          description: OK
          headers:
            Location:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Location'
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
            ASPSP-SCA- Approach:
              schema:
                type: string
                enum:
                  - DECOUPLED
              required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponseBody'
      description: Creates a payment initiation request at the ASPSP.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Content-Type-JSON'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SinglePayments'
        description: ''
  /payments/pain.001-sepa-credit-transfers:
    post:
      summary: 5.3.2 Payment Initiation with pain.001 XML message as Payment Instruction
      operationId: post-payments-pain.001-sepa-credit-transfers
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponseBody'
      description: Creates a payment initiation request at the ASPSP.
      parameters:
        - in: unknown
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Content-Type-XML'
      requestBody:
        description: Please see Implementation Guidlines Version 1.3.4 - chapter 5.3.2 for an PAIN.001.001.03 example.
        content:
          application/xml:
            schema:
              type: object
              properties: {}
            examples:
              xml:
                summary: Example of application/xml and application/json
                value: |-
                  <?xml version="1.0" encoding="UTF-8"?>
                  <Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.03">
                    <CstmrCdtTrfInitn>
                        <GrpHdr>
                          <MsgId>MIPI-123456789RI-123456789</MsgId>
                          <CreDtTm>2017-02-14T20:23:34.000Z</CreDtTm>
                          <NbOfTxs>1</NbOfTxs>
                          <CtrlSum>123</CtrlSum>
                          <InitgPty>
                              <Nm>PaymentInitiator</Nm>
                              <Id>
                                <OrgId>
                                    <Othr>
                                      <Id>DE10000000012</Id>
                                      <SchmeNm>
                                          <Prptry>PISP</Prptry>
                                      </SchmeNm>
                                    </Othr>
                                </OrgId>
                              </Id>
                          </InitgPty>
                        </GrpHdr>
                        <PmtInf>
                          <PmtInfId>BIPI-123456789RI-123456789</PmtInfId>
                          <PmtMtd>TRF</PmtMtd>
                          <NbOfTxs>1</NbOfTxs>
                          <CtrlSum>123</CtrlSum>
                          <PmtTpInf>
                              <SvcLvl>
                                <Cd>SEPA</Cd>
                              </SvcLvl>
                          </PmtTpInf>
                          <ReqdExctnDt>2017-02-15</ReqdExctnDt>
                          <Dbtr>
                              <Nm>PSU Name</Nm>
                          </Dbtr>
                          <DbtrAcct>
                              <Id>
                                <IBAN>DE87200500001234567890</IBAN>
                              </Id>
                          </DbtrAcct>
                          <ChrgBr>SLEV</ChrgBr>
                          <CdtTrfTxInf>
                              <PmtId>
                                <EndToEndId>RI-123456789</EndToEndId>
                              </PmtId>
                              <Amt>
                                <InstdAmt Ccy="EUR">123</InstdAmt>
                              </Amt>
                              <Cdtr>
                                <Nm>Merchant123</Nm>
                              </Cdtr>
                              <CdtrAcct>
                                <Id>
                                    <IBAN>DE23100120020123456789</IBAN>
                                </Id>
                              </CdtrAcct>
                              <RmtInf>
                                <Ustrd>Ref Number Merchant-123456</Ustrd>
                              </RmtInf>
                          </CdtTrfTxInf>
                        </PmtInf>
                    </CstmrCdtTrfInitn>
                  </Document>
      tags:
        - Payment Initiation Requests
        - PIS
        - Payments
  /bulk-payments/sepa-credit-transfers:
    post:
      summary: 5.3.3.1 Bulk Payment Initiation with JSON encoding of the Payment Instruction
      tags:
        - Payment Initiation Requests
        - PIS
        - Bulk-Payment
      responses:
        '200':
          description: OK
          headers:
            header-0:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponseBody'
      operationId: post-payments-bulk-payments-sepa-credit-transfers
      description: Creates a bulk payment initiation request at the ASPSP.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Content-Type-JSON'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPayments'
    parameters: []
  /periodic-payments/sepa-credit-transfers:
    post:
      summary: 5.3.4.1 Standing Orders for Recurring/Periodic Payments in JSON encoding
      tags:
        - Payment Initiation Requests
        - PIS
        - Periodic-Payment
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponseBody'
      operationId: post-payments-periodic-payments-sepa-credit-transfers
      description: Creates a periodic payment initiation request at the ASPSP.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Content-Type-JSON'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodicPayments'
        description: '  '
    parameters: []
  '/{payment-service}/{payment-product}/{paymentId}/status':
    parameters:
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/PaymentService'
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/PaymentProduct'
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/PaymentID'
    get:
      summary: 5.4 Get Transaction Status Request
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponseBody'
      operationId: get-payment-service-payment-product-paymentId
      description: Can check the status of a payment initiation.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
      tags:
        - Get Transaction Status
  '/{payment-service}/{payment-product}/{paymentId}':
    parameters:
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/PaymentService'
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/PaymentProduct'
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/PaymentID'
    delete:
      summary: 5.6 Payment Cancellation Request
      operationId: delete-payment-service-payment-product-paymentId
      responses:
        '204':
          description: No Content
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
      description: |-
        It initiates the cancellation of a payment. Depending on the payment-service, the payment- product and the ASPSP's implementation, this TPP call might be sufficient to cancel a payment. If an authorisation of the payment cancellation is mandated by the ASPSP, a corresponding hyperlink will be contained in the response message. These two cases will be separated also in using different 2xx HTTP response codes.

        If the DELETE is sufficient for cancelling the payment: HTTP response code 204.
        If the DELETE is not sufficient for cancelling the payment since an authorisation of the cancellation by the PSU is needed: HTTP response code 202.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
      tags:
        - PIS
        - Payment Cancellation Request
    get:
      summary: 5.5 Get Payment Request
      operationId: get-payment-service-payment-product-paymentId
      responses:
        '200':
          description: OK
          headers:
            X-Request-Id:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
      description: |-
        Returns the content of a payment object.

        ### Response Body
        The response body is dependent on the parameter {payment-service}. It contains the view of the ASPSP on the addressed payment resource.
        For JSON based {payment-services}, the payment resources may contain e.g. in addition the transaction status data element.
        For XML based {payment-services}, the pain.001 objects are returned. In case of a submitted standing order where the payment information has been submitted in a pain.001 format, the resource content is returned in a multipart message as the submission.
        In all cases, the data element entries can be different from the submission entries, if the ASPSP has reformatted the content, e.g. the requested execution dates or character sets in the unstructured remittance information.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
      tags:
        - Get Payment Request
  /consents:
    post:
      summary: 6.4.1.1 Consent Requeston Dedicated Accounts
      responses:
        '201':
          description: Created
          headers:
            Location:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Location'
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
            ASPSP-SCA-Approach:
              schema:
                type: string
            ASPSP-Notification- Support:
              schema:
                type: boolean
              description: |-
                true if the ASPSP supports resource status notification services.
                false if the ASPSP supports resource status notification in general, but not for the current request.
                Not used, if resource status notification services are generally not supported by the ASPSP.
                Shall be supported if the ASPSP supports resource status notification services, see more details in the extended service definition [XS2A-RSNS].
            ASPSP-Notification- Content:
              schema:
                type: string
              description: |-
                The string has the form
                status=X1, ..., Xn
                where Xi is one of the constants SCA, PROCESS, LAST and where constants are not repeated.
                The usage of the constants supports the following semantics:
                SCA: Notification on every change of the scaStatus attribute for all related authorisation processes is provided by the ASPSP for the related resource.
                PROCESS: Notification on all changes of consentStatus or transactionStatus attributes is provided by the ASPSP for the related resource.
                LAST: Notification on the last consentStatus or transactionStatus as available in the XS2A interface is provided by the ASPSP for the related resource.
                This field must be provided if the ASPSP- Notification-Support =true. The ASPSP might consider the notification content as preferred by the TPP, but can also respond independently of the preferred request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  consentStatus:
                    type: string
                    enum:
                      - received
                      - rejected
                      - partiallyAuthorised
                      - valid
                      - revokedByPsu
                      - expired
                      - terminatedByTpp
                  consentId:
                    type: string
                    description: 'Identification of the consent resource as it is used in the API structure  '
                  psuMessage:
                    type: string
                    maxLength: 512
                    description: 'Text to be displayed to the PSU, e.g. in a Decoupled SCA Approach'
                required:
                  - consentStatus
                  - consentId
      operationId: post-consents
      description: |-
        Creates an account information consent resource at the ASPSP regarding access to accounts specified in this request.

        ### Side Effects
        When this Consent Request is a request where the "recurringIndicator" equals true, and if it exists already a former consent for recurring access on account information for the addressed PSU and potentially addressed corporate identification submitted by this TPP, then the former consent automatically expires as soon as the new consent request is authorised by the PSU.
        There are no expiration side effects foreseen for Consent Requests where the "recurringIndicator" equals false.

        ### Note:
        All permitted "access" attributes ("accounts", "balances" and "transactions") used in this message shall carry a non-empty array of account references, indicating the accounts where the type of access is requested. Please note that a "transactions" or "balances" access right also gives access to the generic /accounts endpoints, i.e. is implicitly supporting also the "accounts" access.

        This specification mandates the ASPSP to support all POST consent requests with dedicated accounts, i.e. POST requests with the above mentioned sub-attributes, where at least one sub-attribute is contained, and where all contained sub-attributes carry a non-empty array of account references. This results in a consent on dedicated accounts. For this Consent Request on Dedicated Accounts, no assumptions are made for the SCA Approach by this specification.
        Optionally, the ASPSP can support also Consent Requests, where the above mentioned sub-attributes "accounts", "balances" and "transactions" only carry an empty array or where the sub-attributes "availableAccounts" or "allPsd2" are used – both with the value "allAccounts", cp. 6.4.1.2,

        ## 6.4.1.2 Consent Request on Account List or without Indication of Accounts

        ### Consent Request on Account List of Available Accounts
        This function is supported by the same call as the Consent Request on Dedicated Accounts. The only difference is that the call only contains the "availableAccounts" or “availableAccountsWithBalances” sub attribute within the "access" attribute with value "allAccounts".
        In this case the call creates an account information consent resource at the ASPSP to return a list of all available accounts, resp. all available accounts with its balances. For the first of these specific Consent Requests, no assumptions are made for the SCA Approach by this specification, since there are no balances or transaction information contained and this is then not unambigously required by [EBA-RTS]. It is up to the ASPSP to implement the appropriate requirements on customer authentication.

        ### Consent Request without Indication of Accounts – Bank Offered Consent
        This function is supported by the same call as the Consent Request on Dedicated Accounts. The only difference is that the call contains the "accounts", "balances" and/or "transactions" sub attribute within the "access" attribute all with an empty array.
        The ASPSP will then agree bilaterally directly with the PSU on which accounts the requested access consent should be supported. The result can be retrieved by the TPP by using the GET Consent Request method, cp. 6.4.3. For this function the Embedded SCA Approach is not supported.

        ### Consent Request for Access to all Accounts for all PSD2 defined AIS – Global Consent
        This function is supported by the same call as the Consent Request on Dedicated Accounts. The only difference is that the call contains the "allPsd2" sub attribute within the "access" attribute with the value "allAccounts".
        If this function is supported, it will imply a consent on all available accounts of the PSU on all PSD2 related account information services. For this specific Consent Request, no assumptions are made for the SCA Approach by this specification.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access:
                  $ref: '#/components/schemas/AccountAccess'
                recurringIndicator:
                  type: boolean
                  description: |-
                    true, if the consent is for recurring access to the account data
                    false, if the consent is for one access to the account data
                validUntil:
                  type: string
                  format: date
                  description: |-
                    This parameter is requesting a valid until date for the requested consent. The content is the local ASPSP date in ISODate Format, e.g. 2017-10-30.
                    Future dates might get adjusted by ASPSP.
                    If a maximal available date is requested, a date in far future is to be used: "9999-12-31".
                    In both cases, the consent object to be retrieved by the GET Consent Request will contain the adjusted date.
                frequencyPerDay:
                  type: integer
                  description: |-
                    This field indicates the requested maximum frequency for an access without PSU involvement per day. For a one-off access, this attribute is set to "1".
                    The frequency needs to be greater equal to one. If not otherwise agreed bilaterally between TPP and ASPSP, the frequency is less equal to 4.
                    Remark for Future: Additional conditions might be added later to deal with the situation where the PSU is consenting towards the TPP for account access only where the PSU is actively asking.
                combinedServiceIndicator:
                  type: boolean
                  description: 'If true indicates that a payment initiation service will be addressed in the same "session", cp. Section 9.'
              required:
                - access
                - recurringIndicator
                - validUntil
                - frequencyPerDay
                - combinedServiceIndicator
      tags:
        - Account Information Consent Request
  '/consents{consentId}/status':
    parameters:
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/ConsentID'
    get:
      summary: 6.4.2 Get Status Request
      tags:
        - Account Information Consent Request
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  consentStatus:
                    type: string
                    description: This is the overall lifecycle status of the consent.
                    enum:
                      - received
                      - rejected
                      - partiallyAuthorised
                      - valid
                      - revokedByPsu
                      - expired
                      - terminatedByTpp
                required:
                  - consentStatus
      operationId: get-consents-consentId-status
      description: Can check the status of an account information consent resource.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
  '/consents/{consendId}':
    parameters:
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/ConsentID'
    get:
      summary: 6.4.3 Get Consent Request
      tags:
        - Account Information Consent Request
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    $ref: '#/components/schemas/AccountAccess'
                  recurringIndicator:
                    type: boolean
                  validUntil:
                    type: string
                    format: date
                  frequencyPerDay:
                    type:
                      - string
                      - integer
                  lastActionDate:
                    type: string
                    format: date
                    description: This date is containing the date of the last action on the consent object either through the XS2A interface or the PSU/ASPSP interface having an impact on the status.
                  consentStatus:
                    type: string
                    description: The status of the consent resource.
                    enum:
                      - received
                      - rejected
                      - partiallyAuthorised
                      - valid
                      - revokedByPsu
                      - expired
                      - terminatedByTpp
                required:
                  - access
                  - recurringIndicator
                  - validUntil
                  - frequencyPerDay
                  - lastActionDate
                  - consentStatus
      operationId: get-consents-consendId
      description: 'Returns the content of an account information consent object. This is returning the data for the TPP especially in cases, where the consent was directly managed between ASPSP and PSU e.g. in a re-direct SCA Approach.'
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
    delete:
      summary: 6.5 Delete an Account Information Consent Object
      operationId: delete-consents-consendId
      responses:
        '204':
          description: No Content
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
      description: |-
        The TPP can delete an account information consent object if needed with this call.

        Deletes a given consent.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
      tags:
        - Account Information Consent Request
  /accounts:
    get:
      summary: 6.6.1 Read Account List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccountDetails'
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
      operationId: get-6.6.1-Read-Account-List
      description: 'Reads a list of bank accounts, with balances where required. It is assumed that a consent of the PSU to this access is already given and stored on the EFiS system. The addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId.'
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Consent-ID'
        - schema:
            type: boolean
          in: query
          name: withBalance
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/PSU-IP-Address'
      tags:
        - Read Account Data Requests
        - AIS
    parameters: []
  '/accounts/{account-id}':
    get:
      summary: 6.6.2 Read Account Details
      tags:
        - Read Account Data Requests
        - AIS
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDetails'
      operationId: get-6.6.2-Read-Account-Details
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Consent-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/PSU-IP-Address'
        - schema:
            type: boolean
          in: query
          name: withBalance
      description: 'Reads details about an account, with balances where required. It is assumed that a consent of the PSU to this access is already given and stored on the EFiS system. The addressed details of this account depends then on the stored consent addressed by consentId.'
    parameters:
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/AccountID'
  '/accounts/{account-id}/balances':
    get:
      summary: 6.6.3 Read Balance
      tags:
        - Read Account Data Requests
        - AIS
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/AccountReference'
                  balances:
                    type: array
                    items:
                      $ref: '#/components/schemas/Balance'
      operationId: get-6.6.3-Read-Balance
      description: 'Reads account data from a given account addressed by "account-id".  '
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Consent-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/PSU-IP-Address'
    parameters:
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/AccountID'
  '/accounts/{account-id}/transactions':
    parameters:
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/AccountID'
    get:
      summary: 6.6.4 Read Transaction List
      tags:
        - Read Account Data Requests
        - AIS
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
                  - application/xml
              description: |-
                Possible values are:
                 application/json  application/xml  application/text
              required: true
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/AccountReference'
                  transactions:
                    $ref: '#/components/schemas/AccountReport'
                  balances:
                    type: array
                    items:
                      $ref: '#/components/schemas/Balance'
      operationId: get-6.6.4-Read-Transaction-List
      description: 'Reads account data from a given account addressed by "account-id".'
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - schema:
            type: string
            format: date
          in: query
          name: dateFrom
          description: |-
            Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required. Might be ignored if a delta function is used.
            For booked transactions, the relevant date is the booking date. For pending transactions, the relevant date is the entry date, which may not be transparent neither in this API nor other channels of the ASPSP.
        - schema:
            type: string
            format: date
          in: query
          name: dateTo
          description: |-
            End date (inclusive the data dateTo) of the transaction list, default is "now" if not given. Might be ignored if a delta function is used.
            For booked transactions, the relevant date is the booking date. For pending transactions, the relevant date is the entry date, which may not be transparent neither in this API nor other channels of the ASPSP.
        - schema:
            type: string
          in: query
          name: entryReferenceFrom
          description: |-
            This data attribute is indicating that the AISP is in favour to get all transactions after the transaction with identification entryReferenceFrom alternatively to the above defined period. This is a implementation of a delta access.
            If this data element is contained, the entries "dateFrom" and "dateTo" might be ignored by the ASPSP if a delta report is supported.
        - schema:
            type: string
            enum:
              - booked
              - pending
              - both
          in: query
          name: bookingStatus
          description: |-
            Permitted codes are "booked", "pending" and "both"
            "booked" shall be supported by the ASPSP.
            To support the "pending" and "both" feature is optional for the ASPSP, Error code if not supported in the online banking frontend
          required: true
        - schema:
            type: boolean
          in: query
          name: deltaList
          description: |-
            This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report.
            This delta indicator might be rejected by the ASPSP if this function is not supported.
            If this data element is contained, the entries "dateFrom" and "dateTo" might be ignored by the ASPSP if a delta report is supported.
        - schema:
            type: boolean
          in: query
          name: withBalance
          description: 'If contained, this function reads the list of transactions including the booking balance, if granted by the PSU in the related consent and available by the EFiS. This parameter might be ignored by the EFiS.'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Consent-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/PSU-IP-Address'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Accept'
  '/accounts/{account-id}/transactions/{transactionId}':
    parameters:
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/AccountID'
      - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/TransactionID'
    get:
      summary: 6.6.5 Read Transaction Details
      tags:
        - Read Account Data Requests
        - AIS
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                enum:
                  - application/json
                  - application/xml
              description: |-
                Possible values are:
                 application/json
              required: true
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionDetails:
                    $ref: '#/components/schemas/Transactions'
      operationId: get-6.6.5-Read-Transaction-Details
      description: 'Reads transaction details from a given transaction addressed by “transactionId” on a given account addressed by "account-id". This call is only available on transactions as reported in a JSON format.'
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/PSU-IP-Address'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Consent-ID'
  /bulk-payments/pain.001-sepa-credit-transfers:
    post:
      summary: 5.3.3.2 Bulk Payment Initiation with XML encoding of the Payment Instruction
      tags:
        - Bulk-Payment
        - Payment Initiation Requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponseBody'
      operationId: post-bulk-payments-pain.001-sepa-credit-transfers
      description: |
        Creates a bulk payment initiation request at the ASPSP.
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Content-Type-XML'
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
      requestBody:
        content:
          application/xml:
            schema:
              type: object
              properties: {}
        description: Please see Implementation Guidlines Version 1.3.4 - chapter 5.3.3.2 for an PAIN.001 example.
    '/bulk-payments/sepa-credit-transfers/{paymentID}/status':
      parameters:
        - $ref: './ReusablePathParameters.v1.yaml#/components/parameters/PaymentID'
      get:
        summary: Get Transaction Status Request – bulk-payments
        tags:
          - Get Transaction Status Request
          - Bulk-Payment
          - PIS
        responses:
          '200':
            description: OK
            headers:
              X-Request-ID:
                $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionStatusResponseBody'
        operationId: get-bulk-payments-sepa-credit-transfers-paymentID-status
        description: Can check the status of a bulk payment initiation.
        parameters:
          - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/Accept'
  /periodic-payments/pain.001-sepa-credit-transfers:
    post:
      summary: 5.3.4.2 Payment Initiation for Standing Orders with XML based payment data
      tags:
        - Periodic-Payment
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponseBody'
      operationId: post-periodic-payments-pain.001-sepa-credit-transfers
      description: 'The standing order management data will be JSON based in the XS2A API also if the related payment data is based on XML syntax. For this reason, the Payment Initiation Request for standing orders is defined as an HTTP multipart message in this case.'
      parameters:
        - $ref: './ReusableHeaderParameters.v1.yaml#/components/parameters/X-Request-ID'
        - schema:
            type: string
            example: multipart/form-data; boundary=AaaBbbCcc
          in: header
          name: Content-Type
          required: true
          description: multipart/form-data; boundary=AaaBbbCcc
      requestBody:
        description: See Example
        content:
          multipart/form-data:
            schema:
              type: object
              properties: {}
            examples:
              xml:
                summary: Example of application/xml and application/json
                value: "--AaaBbbCcc\nContent-Disposition: form-data; name=\"xml_sct\"\nContent-Type: application/xml\n<Document xmlns=\"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\">\n  <CstmrCdtTrfInitn>\n      <GrpHdr>\n        <MsgId>MIPI-123456789RI-123456789</MsgId>\n        <CreDtTm>2017-02-14T20:23:34.000Z</CreDtTm>\n        <NbOfTxs>1</NbOfTxs>\n        <CtrlSum>123</CtrlSum>\n        <InitgPty>\n            <Nm>PaymentInitiator</Nm>\n            <Id>\n              <OrgId>\n                  <Othr>\n                    <Id>DE10000000012</Id>\n                    <SchmeNm>\n                        <Prptry>PISP</Prptry>\n                    </SchmeNm>\n                  </Othr>\n              </OrgId>\n            </Id>\n        </InitgPty>\n      </GrpHdr>\n      <PmtInf>\n        <PmtInfId>BIPI-123456789RI-123456789</PmtInfId>\n        <PmtMtd>TRF</PmtMtd>\n        <NbOfTxs>1</NbOfTxs>\n        <CtrlSum>123</CtrlSum>\n        <PmtTpInf>\n            <SvcLvl>\n              <Cd>SEPA</Cd>\n            </SvcLvl>\n        </PmtTpInf>\n        <ReqdExctnDt>2017-02-15</ReqdExctnDt>\n        <Dbtr>\n            <Nm>PSU Name</Nm>\n        </Dbtr>\n        <DbtrAcct>\n            <Id>\n              <IBAN>DE87200500001234567890</IBAN>\n            </Id>\n        </DbtrAcct>\n        <ChrgBr>SLEV</ChrgBr>\n        <CdtTrfTxInf>\n            <PmtId>\n              <EndToEndId>RI-123456789</EndToEndId>\n            </PmtId>\n            <Amt>\n              <InstdAmt Ccy=\"EUR\">123</InstdAmt>\n            </Amt>\n            <Cdtr>\n              <Nm>Merchant123</Nm>\n            </Cdtr>\n            <CdtrAcct>\n              <Id>\n                  <IBAN>DE23100120020123456789</IBAN>\n              </Id>\n            </CdtrAcct>\n            <RmtInf>\n              <Ustrd>Ref Number Merchant-123456</Ustrd>\n            </RmtInf>\n        </CdtTrfTxInf>\n      </PmtInf>\n  </CstmrCdtTrfInitn>\n</Document>\n--AaaBbbCcc\nContent-Disposition: form-data; name=\"json_standingordermanagement\" \nContent-Type: application/json\n{\"startDate\": \"2018-03-01\",\n\"frequency\": \"monthly\",\n\"executionRule\": \"preceding\",\n\"dayOfExecution\": \"01\"\n}\n--AaaBbbCcc—-"
components:
  schemas:
    AccountDetails:
      title: AccountDetails
      type: object
      properties:
        resourceId:
          type: string
          example: '3089000002'
        iban:
          type: string
          example: DE87200500001234567890
          description: IBAN number
        bban:
          type: string
          description: Basic Bank Account Number
        msisdn:
          type: string
          description: 'Mobile Subscriber Integrated Services Digital Network Number '
          maxLength: 35
        currency:
          type: string
          example: EUR
        name:
          type: string
          maxLength: 35
        product:
          type: string
          maxLength: 35
        cashAccountType:
          type: string
        status:
          type: string
          enum:
            - enabled
            - deleted
            - blocked
          description: 'If this field is not used, than the account is available in the sense of this specification.'
        bic:
          type: string
          description: Bank Identifier Code
        linkedAccounts:
          type: string
          maxLength: 70
        usage:
          type: string
          enum:
            - PRIV
            - ORGA
          maxLength: 4
        details:
          type: string
          maxLength: 140
        balances:
          type: array
          items:
            $ref: '#/components/schemas/Balance'
        _links:
          type: string
      required:
        - currency
    Balance:
      title: Balance
      type: object
      properties:
        balanceAmount:
          $ref: '#/components/schemas/Amount'
        balanceType:
          type: string
          enum:
            - closingBooked
            - expected
            - openingBooked
            - interimAvailable
            - interimBooked
            - forwardAvailable
            - nonInvoiced
        creditLimitIncluded:
          type: boolean
        lastChangeDateTime:
          type: string
          format: date-time
        referenceDate:
          type: string
          format: date
        lastCommitedTransaction:
          type: string
      required:
        - balanceAmount
    Amount:
      title: Amount
      type: object
      properties:
        currency:
          type: string
          example: EUR
          description: ISO 4217
        amount:
          type: string
          example: '1234.56'
          description: Amount
      required:
        - currency
        - amount
    Address:
      title: Address
      type: object
      properties:
        streetName:
          type: string
          example: Am Weiher
          description: Street Name
        buildingNumber:
          type: string
          example: '1'
          description: Building number
        townName:
          type: string
          example: Dreieich
          description: Town Name
        postCode:
          type: string
          example: '63303'
          description: Post code
        country:
          type: string
          example: DE
          description: Country
      required:
        - country
    AccountReference:
      title: AccountReference
      type: object
      properties:
        iban:
          type: string
          example: DE87200500001234567890
          description: IBAN number
        bban:
          type: string
        pan:
          type: string
          maxLength: 35
          description: Primary Account Number
        maskedPan:
          type: string
          maxLength: 35
          description: Primary Account Number in a masked form
        msisdn:
          type: string
          maxLength: 35
        currency:
          type: string
          example: EUR
          description: ISO 4217
      required:
        - iban
    Transactions:
      title: Transactions
      type: object
      properties:
        transactionId:
          type: string
        bookingDate:
          type: string
          format: date
        valuedate:
          type: string
          format: date
        transactionAmount:
          $ref: '#/components/schemas/Amount'
        creditorAccount:
          $ref: '#/components/schemas/AccountReference'
        debtorAccount:
          $ref: '#/components/schemas/AccountReference'
        remittanceInformationUnstructured:
          type: string
        remittanceInformationStructured:
          type: string
      required:
        - transactionAmount
    BulkEntry:
      title: BulkEntry
      type: object
      description: ''
      properties:
        endToEndIdentification:
          type: string
        instructedAmount:
          $ref: '#/components/schemas/Amount'
        creditorAccount:
          $ref: '#/components/schemas/AccountReference'
        creditorAgent:
          type: string
        creditorName:
          type: string
        creditorAddress:
          $ref: '#/components/schemas/Address'
        remittanceInformationUnstructured:
          type: string
    AccountAccess:
      title: AccountAccess
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: ''
        balances:
          type: array
          items:
            $ref: ''
        transactions:
          type: array
          enum:
            - allAccounts
          items:
            $ref: '#/components/schemas/AccountReference'
        availableAccountsWithBalance:
          type: string
          enum:
            - allAccounts
          description: 'Only the value "allAccounts" is admitted.'
        allPsd2:
          type: string
          enum:
            - allAccounts
          description: 'Only the value "allAccounts" is admitted.'
        availableAccounts:
          type: string
          enum:
            - allAccounts
          description: 'Only the value "allAccounts" is admitted.'
    SinglePayments:
      title: SinglePayments
      type: object
      description: '    '
      properties:
        endToEndIdentification:
          type: string
        debtorAccount:
          $ref: '#/components/schemas/AccountReference'
        instructedAmount:
          $ref: '#/components/schemas/Amount'
        creditorAccount:
          $ref: '#/components/schemas/AccountReference'
        creditorAgent:
          type: string
        creditorName:
          type: string
        creditorAddress:
          $ref: '#/components/schemas/Address'
        remittanceInformationUnstructured:
          type: string
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
    BulkPayments:
      title: BulkPayments
      type: object
      properties:
        batchBookingPreferred:
          type: boolean
        debtorAccount:
          $ref: '#/components/schemas/AccountReference'
        paymentInformationId:
          type: string
        requestedExecutionDate:
          type: string
          format: date
        requestedExecutionTime:
          type: string
          format: date-time
        payments:
          type: array
          items:
            $ref: '#/components/schemas/BulkEntry'
    PeriodicPayments:
      title: PeriodicPayments
      type: object
      properties:
        endToEndIdentification:
          type: string
        debtorAccount:
          $ref: '#/components/schemas/AccountReference'
        instructedAmount:
          $ref: '#/components/schemas/Amount'
        creditorAccount:
          $ref: '#/components/schemas/AccountReference'
        creditorAgent:
          type: string
        creditorName:
          type: string
        creditorAddress:
          $ref: '#/components/schemas/Address'
        remittanceInformationUnstructured:
          type: string
        startDate:
          type: string
          format: date
        executionRule:
          type: string
          format: date
        endDate:
          type: string
          format: date
        frequency:
          type: string
        dayOfExecution:
          type: string
          format: date
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
    ConsentOnDedicatedAccounts:
      title: ConsentOnDedicatedAccounts
      type: object
      properties:
        access:
          $ref: '#/components/schemas/AccountAccess'
        recurringIndicator:
          type: boolean
        validUntil:
          type: string
          format: date
        frequencyPerDay:
          type: integer
        combinedServiceIndicator:
          type: boolean
      required:
        - access
        - recurringIndicator
        - validUntil
        - frequencyPerDay
        - combinedServiceIndicator
    AccountReport:
      title: AccountReport
      type: object
      properties:
        booked:
          type: array
          items:
            $ref: '#/components/schemas/Transactions'
        pending:
          type: array
          items:
            $ref: '#/components/schemas/Transactions'
    TransactionStatusResponseBody:
      title: TransactionStatusResponseBody
      type: object
      properties:
        transactionStatus:
          type: string
          enum:
            - ACCC
            - ACCP
            - ACSC
            - ACSP
            - ACTC
            - ACWC
            - ACWP
            - RCVD
            - PDNG
            - TJCT
            - CANC
            - ACFC
            - PATC
            - PART
          example: ACCC
        fundsAvailable:
          type: boolean
  securitySchemes: {}
x-tagGroups:
  - name: Establish Account Information Consent
    tags:
      - Account Information Consent Request
  - name: Account Information Service
    tags:
      - Read Account Data Requests
  - name: Payment Initiation Service
    tags:
      - Payments
      - Bulk-Payment
      - Periodic-Payment
      - Get Transaction Status
      - Get Payment Request
      - Payment Cancellation Request
security: []
